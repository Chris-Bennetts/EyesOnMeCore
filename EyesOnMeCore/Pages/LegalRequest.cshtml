@page
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model EyesOnMeCore.Pages.LegalRequestModel
@{
    LegalRequestModel legalRequest = new LegalRequestModel();
    //ClaimsPrincipal principal = HttpContext.Current.User as ClaimsPrincipal;  
    //string userid = UserManager.GetUserId();
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title>Inbox</title>
    <style>
        #overlay {
            position: fixed;
            display: none;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0,0,0,0.5);
            z-index: 2;
            cursor: pointer;
        }

        body {
            background-color: #111;
            color: #fff;
            font-family: Arial, sans-serif;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Inbox styles */
        .message-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .message-item {
            display: flex;
            align-items: center;
            border-bottom: 1px solid #555;
            padding: 20px 0;
        }

        .message-sender {
            font-weight: bold;
            margin-right: 10px;
        }

        .message-content {
            flex: 1;
            margin-right: 10px;
        }

        .message-timestamp {
            font-size: 14px;
            color: #aaa;
        }
    </style>
</head>
<body>
@if (SignInManager.IsSignedIn(User))
{
    <div id="overlay">
        <div class="container">
            <header >
                <h3>Subject Action Request Form</h3>
            </header>
            <main >
                <form>
                    <fieldset>
                        <legend>Select the Options to Include</legend>
                        <div class="form-group">
                            <input type="checkbox" id="reqbool" name="option1">
                            <label id="option1" for="option1">Request a copy of your data</label>
                        </div>
                        <div class="form-group">
                            <input type="checkbox" id="delbool" name="option2">
                            <label for="option2">Delete all data held on you</label>
                        </div>
                    </fieldset>
                    <div class="form-group">
                        <label for="subject">Target</label>
                        <input type="text" id="targettext" name="target">
                    </div>
                    <div class="form-group">
                        <label for="subject">Subject</label>
                        <input type="text" id="subjecttext" name="subject">
                    </div>
                    <div class="form-group">
                        <label for="subject">Return address</label>
                        <input type="text" id="returntext" name="subject">
                    </div>
                    <div class="form-group">
                        <label for="request">Request</label>
                        <textarea id="datatext" name="request"></textarea>
                    </div>
                    <button  onclick="postrequest()" type="submit">Generate Request</button>
                </form>
            </main>
        </div>
    </div>
    <div class="container">
        <button onclick="sendrequest()" type="submit"  class="btn-primary">Generate Request</button>
        <h1>Inbox</h1>
        <ul class="message-list">
            
            @if (legalRequest.requestlist.Count != 0)
            {
                foreach (KeyValuePair<string, string[]> Requestdetail in legalRequest.requestlist)
                {
                    <li class="message-item">
                        <div class="message-sender">@Requestdetail.Value[0]</div>
                            <div class="message-content">@Requestdetail.Value[1]</div>
                        <div class="message-timestamp">@Requestdetail.Value[2]</div>
                    </li>
                } 
            }
            else{
                <li> Request List Empty! Add a request by hitting the generate button above!</li>
            }
        </ul>
    </div>

        <button onclick="delRequest()" type="submit">Delete All Request Data</button>
}
else
{
    <div class="container">
        <h3> This page can only be accessed when logged in please log in to use it.</h3>
    </div>
}
<script>
        function sendrequest() {
        document.getElementById("overlay").style.display = "block";

    }

    function finishrequest() {
        document.getElementById("overlay").style.display = "none";
    }

    function postrequest() {
        const xhttp = new XMLHttpRequest();
        xhttp.onload = function() {
        document.getElementById("demo").innerHTML = this.responseText;
        }
            xhttp.open("POST", "PostRequest");

            var useridtemp = "@User.Identity.Name";
            var purposedesc = "";
            if (document.getElementById("reqbool").value) {
                purposedesc += "request,";
            }
            if(document.getElementById("delbool").value) {
                purposedesc += "delete,";
            }
            text = document.getElementById("datatext").value + "|" + document.getElementById("targettext").value + "|" +
                purposedesc + "|" + document.getElementById("subjecttext").value + "|" + document.getElementById("returntext").value, useridtemp;
            const obj = JSON.stringify(text);
            xhttp.send(obj);
    }

        function delRequest() {
            const xhttp = new XMLHttpRequest();
            xhttp.onload = function () {
                document.getElementById("demo").innerHTML = this.responseText;
            }
            xhttp.open("POST", "PostRequest");

            text = "@User.Identity.Name"; 
            const obj = JSON.stringify(text);
            xhttp.send(obj);
        }
</script>
</body>
</html>
